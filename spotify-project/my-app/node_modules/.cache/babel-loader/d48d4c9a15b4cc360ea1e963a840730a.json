{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\React_Spotify\\\\Spotify\\\\project_spotify\\\\spotify-project\\\\my-app\\\\src\\\\components\\\\SongItem.js\",\n    _s = $RefreshSig$();\n\nimport { Icon } from \"Icons\";\nimport { NavLink } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setCurrent } from \"stores/player\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SongItem(_ref) {\n  _s();\n\n  let {\n    item\n  } = _ref;\n  const dispatch = useDispatch();\n  const {\n    current,\n    playing,\n    controls\n  } = useSelector(state => state.player);\n\n  const imageStyle = item => {\n    switch (item.type) {\n      case 'artist':\n        return 'rounded-full';\n\n      case 'podcast':\n        return 'rounded-xl';\n\n      default:\n        return 'rounded';\n    }\n  };\n\n  const updateCurrent = () => {\n    if (current.id === item.id) {\n      if (playing) {\n        controls.pause();\n      } else {\n        controls.play();\n      }\n    } else {\n      dispatch(setCurrent(item));\n    }\n  };\n\n  const isCurrentItem = (current === null || current === void 0 ? void 0 : current.id) === item.id && playing;\n  return /*#__PURE__*/_jsxDEV(NavLink, {\n    to: \"/\",\n    className: \"bg-footer p-4 rounded hover:bg-active group\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pt-[100%] relative mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: item.image,\n        className: `absolute inset-0 object-cover w-full h-full ${imageStyle(item)}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: updateCurrent,\n        className: `w-10 h-10 rounded-full bg-primary absolute group-hover:flex group-focus:flex bottom-2 right-2 items-center justify-center ${!isCurrentItem ? 'hidden' : 'flex'}`,\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          name: isCurrentItem ? 'pause' : 'play',\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n      className: \"overflow-hidden overflow-ellipsis whitespace-nowrap text-base font-semibold\",\n      children: item.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"line-clamp-2 text-link text-sm mt-1\",\n      children: item.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, item.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SongItem, \"rz+gvZXPS8Zi4DnjjIltWAOJC8g=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = SongItem;\nexport default SongItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"SongItem\");","map":{"version":3,"names":["Icon","NavLink","useDispatch","useSelector","setCurrent","SongItem","item","dispatch","current","playing","controls","state","player","imageStyle","type","updateCurrent","id","pause","play","isCurrentItem","image","title","description"],"sources":["D:/React/React_Spotify/Spotify/project_spotify/spotify-project/my-app/src/components/SongItem.js"],"sourcesContent":["import {Icon} from \"Icons\";\nimport {NavLink} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport { setCurrent } from \"stores/player\";\n\nfunction SongItem({ item }) {\n\n    const dispatch = useDispatch()\n    const { current, playing, controls } = useSelector(state => state.player)\n    const imageStyle = item => {\n        switch (item.type) {\n            case 'artist':\n                return 'rounded-full'\n\n            case 'podcast':     \n                return 'rounded-xl'\n\n            default:\n                return 'rounded'\n        }\n    }\n\n    const updateCurrent = () => {\n        if (current.id === item.id) {\n            if (playing) {\n                controls.pause()\n            } else {\n                controls.play()\n            }\n        } else {\n            dispatch(setCurrent(item))\n        }\n    }\n\n    const isCurrentItem = (current?.id === item.id && playing)\n\n    return (\n        <NavLink\n            key={item.id}\n            to=\"/\"\n            className={\"bg-footer p-4 rounded hover:bg-active group\"}\n        >\n            <div className=\"pt-[100%] relative mb-4\">\n                <img src={item.image} className={`absolute inset-0 object-cover w-full h-full ${imageStyle(item)}`} />\n                <button\n                    onClick={updateCurrent}\n                    className={`w-10 h-10 rounded-full bg-primary absolute group-hover:flex group-focus:flex bottom-2 right-2 items-center justify-center ${!isCurrentItem ? 'hidden' : 'flex'}`}>\n                    <Icon name={isCurrentItem ? 'pause' : 'play'} size={16} />\n                </button>\n            </div>\n            <h6 className=\"overflow-hidden overflow-ellipsis whitespace-nowrap text-base font-semibold\">\n                {item.title}\n            </h6>\n            <p className=\"line-clamp-2 text-link text-sm mt-1\">\n                {item.description}\n            </p>\n        </NavLink>\n    )\n}\n\nexport default SongItem\n"],"mappings":";;;AAAA,SAAQA,IAAR,QAAmB,OAAnB;AACA,SAAQC,OAAR,QAAsB,kBAAtB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAASC,UAAT,QAA2B,eAA3B;;;AAEA,SAASC,QAAT,OAA4B;EAAA;;EAAA,IAAV;IAAEC;EAAF,CAAU;EAExB,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;EACA,MAAM;IAAEM,OAAF;IAAWC,OAAX;IAAoBC;EAApB,IAAiCP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,MAAhB,CAAlD;;EACA,MAAMC,UAAU,GAAGP,IAAI,IAAI;IACvB,QAAQA,IAAI,CAACQ,IAAb;MACI,KAAK,QAAL;QACI,OAAO,cAAP;;MAEJ,KAAK,SAAL;QACI,OAAO,YAAP;;MAEJ;QACI,OAAO,SAAP;IARR;EAUH,CAXD;;EAaA,MAAMC,aAAa,GAAG,MAAM;IACxB,IAAIP,OAAO,CAACQ,EAAR,KAAeV,IAAI,CAACU,EAAxB,EAA4B;MACxB,IAAIP,OAAJ,EAAa;QACTC,QAAQ,CAACO,KAAT;MACH,CAFD,MAEO;QACHP,QAAQ,CAACQ,IAAT;MACH;IACJ,CAND,MAMO;MACHX,QAAQ,CAACH,UAAU,CAACE,IAAD,CAAX,CAAR;IACH;EACJ,CAVD;;EAYA,MAAMa,aAAa,GAAI,CAAAX,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEQ,EAAT,MAAgBV,IAAI,CAACU,EAArB,IAA2BP,OAAlD;EAEA,oBACI,QAAC,OAAD;IAEI,EAAE,EAAC,GAFP;IAGI,SAAS,EAAE,6CAHf;IAAA,wBAKI;MAAK,SAAS,EAAC,yBAAf;MAAA,wBACI;QAAK,GAAG,EAAEH,IAAI,CAACc,KAAf;QAAsB,SAAS,EAAG,+CAA8CP,UAAU,CAACP,IAAD,CAAO;MAAjG;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QACI,OAAO,EAAES,aADb;QAEI,SAAS,EAAG,6HAA4H,CAACI,aAAD,GAAiB,QAAjB,GAA4B,MAAO,EAF/K;QAAA,uBAGI,QAAC,IAAD;UAAM,IAAI,EAAEA,aAAa,GAAG,OAAH,GAAa,MAAtC;UAA8C,IAAI,EAAE;QAApD;UAAA;UAAA;UAAA;QAAA;MAHJ;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QALJ,eAaI;MAAI,SAAS,EAAC,6EAAd;MAAA,UACKb,IAAI,CAACe;IADV;MAAA;MAAA;MAAA;IAAA,QAbJ,eAgBI;MAAG,SAAS,EAAC,qCAAb;MAAA,UACKf,IAAI,CAACgB;IADV;MAAA;MAAA;MAAA;IAAA,QAhBJ;EAAA,GACShB,IAAI,CAACU,EADd;IAAA;IAAA;IAAA;EAAA,QADJ;AAsBH;;GArDQX,Q;UAEYH,W,EACsBC,W;;;KAHlCE,Q;AAuDT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}