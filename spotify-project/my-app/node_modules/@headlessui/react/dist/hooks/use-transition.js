import{Reason as u,transition as g}from"../components/transitions/utils/transition.js";import{disposables as E}from"../utils/disposables.js";import{match as o}from"../utils/match.js";import{useDisposables as M}from"./use-disposables.js";import{useEvent as c}from"./use-event.js";import{useIsMounted as R}from"./use-is-mounted.js";import{useIsoMorphicEffect as T}from"./use-iso-morphic-effect.js";import{useLatestValue as j}from"./use-latest-value.js";function y({container:d,direction:s,classes:l,events:n,onStart:f,onStop:a}){let m=R(),b=M(),e=j(s),p=c(()=>o(e.current,{enter:()=>n.current.beforeEnter(),leave:()=>n.current.beforeLeave(),idle:()=>{}})),v=c(()=>o(e.current,{enter:()=>n.current.afterEnter(),leave:()=>n.current.afterLeave(),idle:()=>{}}));T(()=>{let r=E();b.add(r.dispose);let i=d.current;if(!!i&&e.current!=="idle"&&!!m.current)return r.add(()=>{if(!i)return;let t=i.getBoundingClientRect();t.x===0&&t.y===0&&t.width===0&&t.height===0&&a.current(e.current)}),r.dispose(),p(),f.current(e.current),r.add(g(i,l.current,e.current==="enter",t=>{r.dispose(),o(t,{[u.Ended](){v(),a.current(e.current)},[u.Cancelled]:()=>{}})})),r.dispose},[s])}export{y as useTransition};
